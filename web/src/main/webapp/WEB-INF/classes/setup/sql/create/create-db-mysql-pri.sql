-- ======================================================================
-- ===   Sql Script for Database : Geonet
-- ===
-- === Build : 153
-- ======================================================================

CREATE TABLE geonetwork.Relations
  (
    id         int not null,
    relatedId  int not null,

    primary key(id,relatedId)
  );

-- ======================================================================

CREATE TABLE geonetwork.Categories
  (
    id    int            not null,
    name  varchar(255)   not null,

    primary key(id),
    unique(name)
  );

-- ======================================================================

CREATE TABLE geonetwork.CustomElementSet
  (
    xpath  varchar(1000)  not null
  );

-- ======================================================================

CREATE TABLE geonetwork.Settings
  (
    id        int            not null,
    parentId  int,
    name      varchar(64)    not null,
    value     longtext,

    primary key(id),

    foreign key(parentId) references Settings(id)
  );

-- ======================================================================

CREATE TABLE geonetwork.Languages
  (
    id        varchar(5)   not null,
    name      varchar(32)  not null,
    isInspire char(1)      default 'n',
    isDefault char(1)      default 'n',

    primary key(id)
  );

-- ======================================================================

CREATE TABLE geonetwork.Sources
  (
    uuid     varchar(250)   not null,
    name     varchar(250),
    isLocal  char(1)        default 'y',

    primary key(uuid)
  );

-- ======================================================================

CREATE TABLE geonetwork.IsoLanguages
  (
    id        int          not null,
    code      varchar(3)   not null,
    shortcode varchar(2),

    primary key(id),
    unique(code)
  );

-- ======================================================================

CREATE TABLE geonetwork.IsoLanguagesDes
  (
    idDes   int           not null,
    langId  varchar(5)    not null,
    label   varchar(96)   not null,

    primary key(idDes,langId),

    foreign key(idDes) references IsoLanguages(id),
    foreign key(langId) references Languages(id)
  );

-- ======================================================================

CREATE TABLE geonetwork.Regions
  (
    id     int     not null,
    north  float   not null,
    south  float   not null,
    west   float   not null,
    east   float   not null,

    primary key(id)
  );

-- ======================================================================

CREATE TABLE geonetwork.RegionsDes
  (
    idDes   int           not null,
    langId  varchar(5)    not null,
    label   varchar(96)   not null,

    primary key(idDes,langId),

    foreign key(idDes) references Regions(id),
    foreign key(langId) references Languages(id)
  );

-- ======================================================================

CREATE TABLE geonetwork.Users
  (
    id            int           not null,
    username      varchar(255)  not null,
    password      varchar(120)  not null,
    surname       varchar(32),
    name          varchar(32),
    profile       varchar(32)   not null,
    address       varchar(128),
    city          varchar(128),
    state         varchar(32),
    zip           varchar(16),
    country       varchar(128),
    email         varchar(128),
    organisation  varchar(128),
    kind          varchar(16),
    security      varchar(128)  default '',
    authtype      varchar(32),

    primary key(id),
    unique(username)
  );

-- ======================================================================

CREATE TABLE geonetwork.Operations
  (
    id        int           not null,
    name      varchar(32)   not null,
    reserved  char(1)       default 'n' not null,

    primary key(id)
  );

-- ======================================================================

CREATE TABLE geonetwork.OperationsDes
  (
    idDes   int           not null,
    langId  varchar(5)    not null,
    label   varchar(96)   not null,

    primary key(idDes,langId),

    foreign key(idDes) references Operations(id),
    foreign key(langId) references Languages(id)
  );

-- ======================================================================

CREATE TABLE geonetwork.Requests
  (
    id             int             not null,
    requestDate    varchar(30),
    ip             varchar(128),
    query          text,
    hits           int,
    lang           varchar(16),
    sortBy         varchar(128),
    spatialFilter  text,
    type           text,
    simple         int             default 1,
    autogenerated  int             default 0,
    service        varchar(128),

    primary key(id)
  );

CREATE INDEX RequestsNDX1 ON geonetwork.Requests(requestDate);
CREATE INDEX RequestsNDX2 ON geonetwork.Requests(ip);
CREATE INDEX RequestsNDX3 ON geonetwork.Requests(hits);
CREATE INDEX RequestsNDX4 ON geonetwork.Requests(lang);

-- ======================================================================

CREATE TABLE geonetwork.Params
  (
    id          int           not null,
    requestId   int,
    queryType   varchar(128),
    termField   varchar(128),
    termText    varchar(128),
    similarity  float,
    lowerText   varchar(128),
    upperText   varchar(128),
    inclusive   char(1),

    primary key(id),

    foreign key(requestId) references Requests(id)
  );

CREATE INDEX ParamsNDX1 ON geonetwork.Params(requestId);
CREATE INDEX ParamsNDX2 ON geonetwork.Params(queryType);
CREATE INDEX ParamsNDX3 ON geonetwork.Params(termField);
CREATE INDEX ParamsNDX4 ON geonetwork.Params(termText);

-- ======================================================================

CREATE TABLE geonetwork.HarvestHistory
  (
    id             int           not null,
    harvestDate    varchar(30),
    elapsedTime    int,
    harvesterUuid  varchar(250),
    harvesterName  varchar(128),
    harvesterType  varchar(128),
    deleted        char(1)       default 'n' not null,
    info           longtext,
    params         longtext,

    primary key(id)

  );

CREATE INDEX HarvestHistoryNDX1 ON geonetwork.HarvestHistory(harvestDate);

-- ======================================================================

CREATE TABLE geonetwork.Groups
  (
    id           int            not null,
    name         varchar(32)    not null,
    description  varchar(255),
    email        varchar(128),
    referrer     int,

    primary key(id),
    unique(name),

    foreign key(referrer) references Users(id)
  );

-- ======================================================================

CREATE TABLE geonetwork.GroupsDes
  (
    idDes   int           not null,
    langId  varchar(5)    not null,
    label   varchar(96)   not null,

    primary key(idDes,langId),

    foreign key(idDes) references Groups(id),
    foreign key(langId) references Languages(id)
  );

-- ======================================================================

CREATE TABLE geonetwork.UserGroups
  (
    userId   int          not null,
    groupId  int          not null,
    profile  varchar(32)  not null,

    primary key(userId,groupId,profile),

    foreign key(userId) references Users(id),
    foreign key(groupId) references Groups(id)
  );

-- ======================================================================

CREATE TABLE geonetwork.CategoriesDes
  (
    idDes   int            not null,
    langId  varchar(5)     not null,
    label   varchar(255)   not null,

    primary key(idDes,langId),

    foreign key(idDes) references Categories(id),
    foreign key(langId) references Languages(id)
  );

-- ======================================================================

CREATE TABLE geonetwork.Metadata
  (
    id           int            not null,
    uuid         varchar(250)   not null,
    schemaId     varchar(32)    not null,
    isTemplate   char(1)        default 'n' not null,
    isHarvested  char(1)        default 'n' not null,
    createDate   varchar(30)    not null,
    changeDate   varchar(30)    not null,
    data         longtext       not null,
    source       varchar(250)   not null,
    title        varchar(255),
    root         varchar(255),
    harvestUuid  varchar(250)   default null,
    owner        int            not null,
    doctype      varchar(255),
    groupOwner   int            default null,
    harvestUri   varchar(512)   default null,
    rating       int            default 0 not null,
    popularity   int            default 0 not null,
    displayorder int,

    primary key(id),
    unique(uuid),

    foreign key(owner) references Users(id),
    foreign key(groupOwner) references Groups(id)
  );

CREATE INDEX MetadataNDX1 ON geonetwork.Metadata(uuid);
CREATE INDEX MetadataNDX2 ON geonetwork.Metadata(source);
CREATE INDEX MetadataNDX3 ON geonetwork.Metadata(owner);

-- ======================================================================

CREATE TABLE geonetwork.Validation
  (
    metadataId   int          not null,
    valType      varchar(40)  not null,
    status       int,
    tested       int,
    failed       int,
    valDate      varchar(30),
    
    primary key(metadataId, valType),
    foreign key(metadataId) references Metadata(id)
);

-- ======================================================================

CREATE TABLE geonetwork.MetadataCateg
  (
    metadataId  int not null,
    categoryId  int not null,

    primary key(metadataId,categoryId),

    foreign key(metadataId) references Metadata(id),
    foreign key(categoryId) references Categories(id)
  );

-- ======================================================================

CREATE TABLE geonetwork.StatusValues
  (
    id        int           not null,
    name      varchar(32)   not null,
    reserved  char(1)       default 'n' not null,
    primary key(id)
  );

-- ======================================================================

CREATE TABLE geonetwork.StatusValuesDes
  (
    idDes   int           not null,
    langId  varchar(5)    not null,
    label   varchar(96)   not null,
    primary key(idDes,langId)
  );

-- ======================================================================

CREATE TABLE geonetwork.MetadataStatus
  (
    metadataId      int            not null,
    statusId        int            default 0 not null,
    userId          int            not null,
    changeDate      varchar(30)    not null,
    changeMessage   varchar(2048)  not null,
    primary key(metadataId,statusId,userId,changeDate),
    foreign key(metadataId) references Metadata(id),
    foreign key(statusId)   references StatusValues(id),
    foreign key(userId)     references Users(id)
  );

-- ======================================================================

CREATE TABLE geonetwork.OperationAllowed
  (
    groupId      int not null,
    metadataId   int not null,
    operationId  int not null,

    primary key(groupId,metadataId,operationId),

    foreign key(groupId) references Groups(id),
    foreign key(metadataId) references Metadata(id),
    foreign key(operationId) references Operations(id)
  );

CREATE INDEX OperationAllowedNDX1 ON geonetwork.OperationAllowed(metadataId);

-- ======================================================================

CREATE TABLE geonetwork.MetadataRating
  (
    metadataId  int           not null,
    ipAddress   varchar(32)   not null,
    rating      int           not null,

    primary key(metadataId,ipAddress),

    foreign key(metadataId) references Metadata(id)
  );

-- ======================================================================

CREATE TABLE geonetwork.MetadataNotifiers
  (
    id         int            not null,
    name       varchar(32)    not null,
    url        varchar(255)   not null,
    enabled    char(1)        default 'n' not null,
    username   varchar(32),
    password   varchar(32),

    primary key(id)
  );

-- ======================================================================

CREATE TABLE geonetwork.MetadataNotifications
  (
    metadataId         int            not null,
    notifierId         int            not null,
    notified           char(1)        default 'n' not null,
    metadataUuid       varchar(250)   not null,
    action             char(1)        not null,
    errormsg           text,

    primary key(metadataId,notifierId),

    foreign key(notifierId) references MetadataNotifiers(id)
  );

-- ======================================================================

CREATE TABLE geonetwork.CswServerCapabilitiesInfo
  (
    idField   int           not null,
    langId    varchar(5)    not null,
    field     varchar(32)   not null,
    label     text,

    primary key(idField),

    foreign key(langId) references Languages(id)
  );

-- ======================================================================

CREATE TABLE geonetwork.Thesaurus
  (
    id           varchar(250)  not null,
    activated    varchar(1),
    primary key(id)
  );

CREATE TABLE geonetwork.Services
  (
  
    id         int,
    name       varchar(64)   not null,
    class       varchar(1048)   not null,
    description       varchar(1048),
        
    primary key(id)
  );
  

CREATE TABLE geonetwork.ServiceParameters
  (
    id         int,
    service     int,
    name       varchar(64)   not null,
    value       varchar(1048)   not null,
    
    primary key(id),
        
    foreign key(service) references Services(id)
  );
